-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Term-content operators in Koshucode
--   
--   An impelemntation of term-content operators. These operators are used
--   in the <tt>koshu</tt> calculator that is contained in the
--   <tt>koshucode-baala-calculator</tt> package.
@package koshucode-baala-cop
@version 0.213.0.0


-- | Replace sublists.
module Koshucode.Baala.Cop.Replace

-- | Type of replace function, <i>from</i> → <i>to</i> → <i>xs</i> →
--   <i>ys</i>.
type Replace t = t -> t -> t -> t

-- | Replace all occurrences.
--   
--   <pre>
--   &gt;&gt;&gt; replaceAll "br" "BR" "abracadabra"
--   "aBRacadaBRa"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceAll "ba" "BA" "abracadabra"
--   "abracadabra"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceAll "" "BR" "abracadabra"
--   "abracadabra"
--   </pre>
replaceAll :: (Textual t) => Replace t

-- | Replace first occurrence.
--   
--   <pre>
--   &gt;&gt;&gt; replaceFirst "br" "BR" "abracadabra"
--   "aBRacadabra"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceFirst "ba" "BA" "abracadabra"
--   "abracadabra"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceFirst "" "BR" "abracadabra"
--   "abracadabra"
--   </pre>
replaceFirst :: (Textual t) => Replace t

-- | Replace last occurrence.
--   
--   <pre>
--   &gt;&gt;&gt; replaceLast "br" "BR" "abracadabra"
--   "abracadaBRa"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceLast "ba" "BA" "abracadabra"
--   "abracadabra"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceLast "" "BR" "abracadabra"
--   "abracadabra"
--   </pre>
replaceLast :: (Textual t) => Replace t

-- | Replace occurrence at the beginning.
--   
--   <pre>
--   &gt;&gt;&gt; replaceBegin "ab" "AB" "abracadabra"
--   "ABracadabra"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceBegin "br" "BR" "abracadabra"
--   "abracadabra"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceBegin "" "BR" "abracadabra"
--   "abracadabra"
--   </pre>
replaceBegin :: (Textual t) => Replace t

-- | Replace occurrence at the end.
--   
--   <pre>
--   &gt;&gt;&gt; replaceEnd "ra" "RA" "abracadabra"
--   "abracadabRA"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceEnd "br" "BR" "abracadabra"
--   "abracadabra"
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; replaceEnd "" "BR" "abracadabra"
--   "abracadabra"
--   </pre>
replaceEnd :: (Textual t) => Replace t


-- | Helper functions to construct content expressions.
module Koshucode.Baala.Cop.Coxhand

-- | Create a form with named blanks.
f :: [String] -> Map (Cox c)

-- | Shorthand for one-blank form — <tt>f ["#1"]</tt>
f1 :: Map (Cox c)

-- | Shorthand for two-blanks form — <tt>f ["#1", "#2"]</tt>
f2 :: Map (Cox c)

-- | Shorthand for three-blanks form — <tt>f ["#1", "#2", "#3"]</tt>
f3 :: Map (Cox c)

-- | Fill blanks in a named form.
i :: String -> [Cox c] -> Cox c

-- | Fill blanks.
ib :: BlankName -> [Cox c] -> Cox c

-- | Fill blanks in the given form.
ix :: Cox c -> [Cox c] -> Cox c

-- | Fill two blanks in a named binary form.
bin :: String -> Cox c -> Cox c -> Cox c

-- | Create a named blank in a form.
b :: String -> Cox c

-- | Shorthand for the first blank — <tt>b "#1"</tt>
b1 :: Cox c

-- | Shorthand for the second blank — <tt>b "#2"</tt>
b2 :: Cox c

-- | Shorthand for the third blank — <tt>b "#3"</tt>
b3 :: Cox c


-- | Content operators on texts.
module Koshucode.Baala.Cop.Text

-- | Content operators on texts.
copsText :: (CContent c) => [Cop c]

-- | <ul>
--   <li><i><b><i>TEXT</i> =? <i>PATTERN</i></b></i> Test <i>TEXT</i>
--   matches <i>PATTERN</i>.</li>
--   <li><i><b><i>TEXT</i> =! <i>PATTERN</i></b></i> Test <i>TEXT</i> does
--   not matches <i>PATTERN</i>.</li>
--   </ul>
copSiv :: (CContent c) => Bool -> CopCalc c

-- | <ul>
--   <li><i>pad-begin <i>CHAR</i> <i>SIZE</i> <i>TEXT</i></i> Pad
--   <i>CHAR</i> to beginning of <i>TEXT</i> upto <i>SIZE</i>.</li>
--   <li><i>pad-end <i>CHAR</i> <i>SIZE</i> <i>TEXT</i></i> Pad <i>CHAR</i>
--   to end of <i>TEXT</i> upto <i>SIZE</i>.</li>
--   </ul>
copPad :: (CContent c) => (Char -> Int -> CharsMap) -> CopCalc c

-- | <ul>
--   <li><i>suffix <i>LIST</i></i> Add unique suffixes to text elements of
--   <i>LIST</i>.</li>
--   </ul>
copSuffix :: (CContent c) => CopCalc c

-- | <ul>
--   <li><i>unsuffix <i>C</i></i> Remove integer suffixes from
--   <i>C</i>.</li>
--   </ul>
copUnsuffix :: (CContent c) => CopCalc c


-- | Content operators on types.
module Koshucode.Baala.Cop.Type

-- | Content operators on types.
copsType :: (CContent c) => [Cop c]

-- | Convert to decimal.
--   
--   <pre>
--   &gt;&gt;&gt; to-dec "12.5"
--   12.5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; to-dec "a"
--   "a"
--   </pre>
copToDec :: (CContent c) => CopCalc c

-- | Test content is the empty.
--   
--   <pre>
--   &gt;&gt;&gt; empty? ()
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; empty? "a"
--   (-)
--   </pre>
copIsEmpty :: (CBool c, CEmpty c) => CopCalc c

-- | Test content is the end.
--   
--   <pre>
--   &gt;&gt;&gt; end? (/)
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; end? "a"
--   (-)
--   </pre>
copIsEnd :: (CBool c, CEnd c) => CopCalc c

-- | Test content is a boolean.
--   
--   <pre>
--   &gt;&gt;&gt; bool? (+)
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; bool? "a"
--   (-)
--   </pre>
copIsBool :: (CBool c) => CopCalc c

-- | Test content is a decimal number.
--   
--   <pre>
--   &gt;&gt;&gt; dec? 12.5
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; dec? "a"
--   (-)
--   </pre>
copIsDec :: (CBool c, CDec c) => CopCalc c

-- | Test content is a clock.
--   
--   <pre>
--   &gt;&gt;&gt; clock? |12:00|
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; clock? "a"
--   (-)
--   </pre>
copIsClock :: (CBool c, CClock c) => CopCalc c

-- | Test content is a time.
--   
--   <pre>
--   &gt;&gt;&gt; time? 2013-04-18
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; time? "a"
--   (-)
--   </pre>
copIsTime :: (CBool c, CTime c) => CopCalc c

-- | Test content is a code.
--   
--   <pre>
--   &gt;&gt;&gt; code? 'a
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; code? "a"
--   (-)
--   </pre>
copIsCode :: (CBool c, CCode c) => CopCalc c

-- | Test content is a term name.
--   
--   <pre>
--   &gt;&gt;&gt; term? '/a
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; term? "a"
--   (-)
--   </pre>
copIsTerm :: (CBool c, CTerm c) => CopCalc c

-- | Test content is a text.
--   
--   <pre>
--   &gt;&gt;&gt; text? 12.5
--   (-)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; text? "a"
--   (+)
--   </pre>
copIsText :: (CBool c, CText c) => CopCalc c

-- | Test content is a list.
--   
--   <pre>
--   &gt;&gt;&gt; list? [ 0 | 1 ]
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; list? "a"
--   (-)
--   </pre>
copIsList :: (CBool c, CList c) => CopCalc c

-- | Test content is a set.
--   
--   <pre>
--   &gt;&gt;&gt; set? { 0 | 1 }
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; set? "a"
--   (-)
--   </pre>
copIsSet :: (CBool c, CSet c) => CopCalc c

-- | Test content is a tie.
--   
--   <pre>
--   &gt;&gt;&gt; tie? {- /a 0 /b 1 -}
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; tie? "a"
--   (-)
--   </pre>
copIsTie :: (CBool c, CTie c) => CopCalc c

-- | Test content is a rel.
--   
--   <pre>
--   &gt;&gt;&gt; rel? {= /a /b [ 0 | 1 ] =}
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; rel? "a"
--   (-)
--   </pre>
copIsRel :: (CBool c, CRel c) => CopCalc c

-- | Test content is a interp.
--   
--   <pre>
--   &gt;&gt;&gt; interp? {| /x is equal to /y . |}
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; interp? "a"
--   (-)
--   </pre>
copIsInterp :: (CBool c, CInterp c) => CopCalc c

-- | Test content is a type.
--   
--   <pre>
--   &gt;&gt;&gt; type? [- text -]
--   (+)
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; type? "a"
--   (-)
--   </pre>
copIsType :: (CBool c, CType c) => CopCalc c


-- | Content operators on clocks and times.
module Koshucode.Baala.Cop.Time

-- | Content operators on clocks and times.
copsTime :: (CContent c) => [Cop c]

-- | Add day/week/month/year to time.
--   
--   <pre>
--   &gt;&gt;&gt; add-week ( 5 )( 2013-04-18 )
--   2013-05-23
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; add-month ( 1 )( 2013-04-18 )
--   2013-05-18
--   </pre>
copTimeAdd :: (CContent c) => (Integer -> Map Time) -> CopCalc c

-- | Convert format of date.
--   
--   <pre>
--   &gt;&gt;&gt; weekly 2013-04-18
--   2013-#16-4
--   </pre>
copDateForm :: (CContent c) => Map Date -> CopCalc c

-- | Convert time to the modified Jurian day.
--   
--   <pre>
--   &gt;&gt;&gt; mjd 2013-04-18
--   56400
--   </pre>
copMjd :: (CContent c) => CopCalc c

-- | Create time from year, month, and day.
--   
--   <pre>
--   &gt;&gt;&gt; time ( 2013 )( 4 )( 18 )
--   2013-04-18
--   </pre>
copTime :: (CContent c) => CopCalc c

-- | Create clock from day, hour, minute, and second.
--   
--   <pre>
--   &gt;&gt;&gt; clock ( 0 )( 12 )( 45 )( 30 )
--   |12:45:30|
--   </pre>
copClock :: (CContent c) => CopCalc c

-- | Day of week.
--   
--   <pre>
--   &gt;&gt;&gt; dayw 2013-04-18
--   4
--   </pre>
copDayw :: (CContent c) => CopCalc c


-- | Operators on content order.
module Koshucode.Baala.Cop.Order

-- | Oerators on content order.
copsOrder :: (CBool c, Eq c, Ord c) => [Cop c]


-- | Content operators.
module Koshucode.Baala.Cop.Misc

-- | Content operators on miscellaneous.
copsMisc :: (CContent c) => [Cop c]


-- | Content operators on Boolean.
module Koshucode.Baala.Cop.Logic

-- | Content operators on Boolean.
copsLogic :: (CBool c, CEmpty c) => [Cop c]


-- | Content operators on lists.
module Koshucode.Baala.Cop.List

-- | Content operators on lists.
copsList :: (CContent c) => [Cop c]


-- | Arithmetic content operators.
module Koshucode.Baala.Cop.Arith

-- | Arithmetic content operators.
copsArith :: (CContent c) => [Cop c]


-- | Rops and cops.
module Koshucode.Baala.Cop.Bundle

-- | Term-content operators.
baalaCops :: (CContent c) => [Cop c]

-- | Height table.
baalaInfix :: [(Chars, InfixHeight)]


-- | Term-content operators.
module Koshucode.Baala.Cop
